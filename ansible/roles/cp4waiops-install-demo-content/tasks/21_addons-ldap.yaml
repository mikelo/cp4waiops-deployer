
# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Install ADDONS
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************

# --------------------------------------------------------------------------------------------------------------------------------------
# Install OpenLDAP
# --------------------------------------------------------------------------------------------------------------------------------------

- name: 🛰️  START - INSTALL OPENLDAP
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"


- name: Log
  shell: |
    export MESSAGE="Installing Open LDAP"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../install_{{current_cp4waiops_feature.kind}}.log
    echo $currentDate" - "$MESSAGE  >> ../install_{{current_cp4waiops_feature.kind}}.log
  ignore_errors: true

- name: 📣 OCP CONSOLE - Create Openshift NOTIFICATION
  shell: |
    cat <<EOF | oc apply -f -
    apiVersion: console.openshift.io/v1
    kind: ConsoleNotification
    metadata:
      name: cp4waiops-notification
    spec:
      backgroundColor: '#ffd500'
      color: '#000'
      location: {{global_config.position_ocp_notifications | default("BannerTop")}}
      text: 'Installing {{current_cp4waiops_feature.kind}} - Open LDAP'    
    EOF
  ignore_errors: true
  when: global_config.create_ocp_notifications | default(true) == true  




- name: 🚀 LDAP - Set LDAP ADMIN Password from instance configuration
  set_fact: current_ldap_admin_password={{current_cp4waiops_feature.ldap_admin_password  | default('CHANGEME')}}
  when: global_config.global_password is undefined or global_config.global_password=="NONE"


- name: 🚀 LDAP - Set LDAP ADMIN Password from global configuration
  set_fact: current_ldap_admin_password={{global_config.global_password}}
  when: global_config.global_password is defined and global_config.global_password!="NONE"


- name: 🟣  LDAP -  Demo UI Password {{current_ldap_admin_password}}
  debug:
    var: current_ldap_admin_password
    verbosity: 1


- name: 🚀 LDAP - Set LDAP USERS Password from instance configuration
  set_fact: current_ldap_user_password={{current_cp4waiops_feature.ldap_user_password  | default('CHANGEME')}}
  when: global_config.global_password is undefined or global_config.global_password=="NONE"


- name: 🚀 LDAP - Set LDAP USERS Password from global configuration
  set_fact: current_ldap_user_password={{global_config.global_password}}
  when: global_config.global_password is defined and global_config.global_password!="NONE"


- name: 🟣  LDAP -  Demo UI Password {{current_ldap_user_password}}
  debug:
    var: current_ldap_user_password
    verbosity: 1




# - name: ADDONS -             ❎ Remove old OpenLDAP
#   kubernetes.core.k8s:
#     state: absent
#     template: ./templates/ldap/install-ldap.j2
#   #when: INSTALL_LDAP == true

- name: LDAP -               🚀 Create OpenLDAP namespace
  kubernetes.core.k8s:
    name: "{{ current_cp4waiops_feature.ldap_namespace }}"
    api_version: v1
    kind: Namespace
    state: present

- name: LDAP -               🚀 Create OpenLDAP namespace RoleBinding
  kubernetes.core.k8s:
    template: ./templates/ldap/anyuid-rolebinding.j2
    state: present

- name: LDAP -               🚀 Install OpenLDAP
  kubernetes.core.k8s:
    state: present
    template: ./templates/ldap/install-ldap-persistent.j2
  #when: INSTALL_LDAP == true

# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for LDAP ready
# --------------------------------------------------------------------------------------------------------------------------------------
- name: 🕦 CHECK -  Wait for 2 pods Running in namespace {{ current_cp4waiops_feature.ldap_namespace }}
  shell: |
    NUM_PODS=$(oc get po -n {{ current_cp4waiops_feature.ldap_namespace }} | grep openldap| grep Running| wc -l)
    echo $NUM_PODS
  register: kubectl_num_pods
  until: kubectl_num_pods.stdout|int >= 2
  retries: 100
  delay: 15



- name: 🕦 TIMESTAMP - END INSTALLATION - INSTALL OPENLDAP
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"


