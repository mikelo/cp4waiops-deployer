
# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Install Demo Apps
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************

# --------------------------------------------------------------------------------------------------------------------------------------
# Install RobotShop
# --------------------------------------------------------------------------------------------------------------------------------------
- name: 🛰️  START - INSTALL DEMO APPS
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"


- name: Log
  shell: |
    export MESSAGE="Installing Demo Apps"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../install_{{current_cp4waiops_feature.kind}}.log
    echo $currentDate" - "$MESSAGE  >> ../install_{{current_cp4waiops_feature.kind}}.log
  ignore_errors: true

- name: 📣 OCP CONSOLE - Create Openshift NOTIFICATION
  shell: |
    cat <<EOF | oc apply -f -
    apiVersion: console.openshift.io/v1
    kind: ConsoleNotification
    metadata:
      name: cp4waiops-notification
    spec:
      backgroundColor: '#ffd500'
      color: '#000'
      location: {{global_config.position_ocp_notifications | default("BannerTop")}}
      text: 'Installing {{current_cp4waiops_feature.kind}} - Demo Apps'    
    EOF
  ignore_errors: true
  when: global_config.create_ocp_notifications | default(true) == true  


# --------------------------------------------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------------------------------------------
# APPLICATION ROBOT SHOP
# --------------------------------------------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------------------------------------------
# - name: 📺 DEMO APPS - Check RobotShop
#   shell: |
#     oc get namespace --ignore-not-found robot-shop
#   ignore_errors: true
#   register: OBJECT_EXISTS


- name: 📺 DEMO APPS - Install RobotShop
  block:
  - name: DEMO APPS -              🚀 Create robot-shop namespace
    kubernetes.core.k8s:
      api_version: v1
      kind: Namespace
      name: "robot-shop"
      state: present
    #when: INSTALL_DEMO_APPS == true

  - name: 📺 DEMO APPS - Create robot-shop service account
    shell: |
      oc delete clusterrolebinding robot-shop
      oc adm policy add-scc-to-user privileged -n robot-shop -z robot-shop
      oc create clusterrolebinding default-robotinfo1-admin --clusterrole=cluster-admin --serviceaccount=robot-shop:robot-shop
      oc adm policy add-scc-to-user privileged -n robot-shop -z default                                
      oc create clusterrolebinding default-robotinfo2-admin --clusterrole=cluster-admin --serviceaccount=robot-shop:default
    ignore_errors: true
    register: demo_robot_shop
    #when: INSTALL_DEMO_APPS == true
              

  - name: 📺 DEMO APPS - Create robot-shop application
    kubernetes.core.k8s:
      state: present
      namespace: robot-shop
      template: ./templates/demo_apps/robotshop/robot-all-in-one.j2
    ignore_errors: true

    #when: INSTALL_DEMO_APPS == true

  - name: 📺 DEMO APPS - Create robot-shop load generation
    kubernetes.core.k8s:
      state: present
      namespace: robot-shop
      src: ./templates/demo_apps/robotshop/load-deployment.yaml
    ignore_errors: true

    #when: INSTALL_DEMO_APPS == true
  #when: OBJECT_EXISTS.stdout|length == 0




# --------------------------------------------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------------------------------------------
# APPLICATION SOCK SHOP
# --------------------------------------------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------------------------------------------
# - name: 📺 DEMO APPS - Check SockShop
#   shell: |
#     oc get namespace --ignore-not-found sock-shop
#   ignore_errors: true
#   register: OBJECT_EXISTS


- name: 📺 DEMO APPS - Install SockShop
  block:
  - name: DEMO APPS -              🚀 Create sock-shop namespace
    kubernetes.core.k8s:
      api_version: v1
      kind: Namespace
      name: "sock-shop"
      state: present
    #when: INSTALL_DEMO_APPS == true

  - name: 📺 DEMO APPS - Create sock-shop service account
    shell: |
      oc adm policy add-scc-to-user privileged -n sock-shop -z sock-shop
      oc create clusterrolebinding default-sockinfo1-admin --clusterrole=cluster-admin --serviceaccount=sock-shop:sock-shop
      oc adm policy add-scc-to-user privileged -n sock-shop -z default                                
      oc create clusterrolebinding default-sockinfo2-admin --clusterrole=cluster-admin --serviceaccount=sock-shop:default
    ignore_errors: true
    register: demo_sock_shop
    #when: INSTALL_DEMO_APPS == true
              

  - name: 📺 DEMO APPS - Create sock-shop application
    kubernetes.core.k8s:
      state: present
      namespace: sock-shop
      template: ./templates/demo_apps/sockshop/sockshop-all-in-one.j2
    #when: INSTALL_DEMO_APPS == true

  #when: OBJECT_EXISTS.stdout|length == 0






# --------------------------------------------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------------------------------------------
# APPLICATION ACME AIR
# --------------------------------------------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------------------------------------------
# - name: 📺 DEMO APPS - Check ACME
#   shell: |
#     oc get namespace --ignore-not-found acme-air
#   ignore_errors: true
#   register: OBJECT_EXISTS




# - name: 📺 DEMO APPS - Install ACME
#   block:
#   - name: DEMO APPS -              🚀 Create acme namespace
#     kubernetes.core.k8s:
#       api_version: v1
#       kind: Namespace
#       name: "acme-air"
#       state: present
#     #when: INSTALL_DEMO_APPS == true

#   - name: 📺 DEMO APPS - Create acme service account
#     shell: |
#       oc adm policy add-scc-to-user privileged -n acme -z acme
#       oc create clusterrolebinding default-acmeinfo1-admin --clusterrole=cluster-admin --serviceaccount=acme-air:acme
#       oc adm policy add-scc-to-user privileged -n acme -z default                                
#       oc create clusterrolebinding default-acmeinfo2-admin --clusterrole=cluster-admin --serviceaccount=acme-air:default
#     ignore_errors: true
#     register: demo_acme_shop
#     #when: INSTALL_DEMO_APPS == true
              

#   - name: 📺 DEMO APPS - Create acme application
#     kubernetes.core.k8s:
#       state: present
#       namespace: acme-air
#       src: ./templates/demo_apps/acmeair/acme-all-in-one.yaml
#     #when: INSTALL_DEMO_APPS == true

#   when: OBJECT_EXISTS.stdout|length == 0

